[tool.ruff]
line-length = 100
exclude = [
    ".tox",
    ".git",
    "__pycache__",
    "build",
    "dist",
    "proto/*",
    "*.pyc",
    "*.egg-info",
    ".cache",
    ".eggs",
]
# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable a comprehensive set of rules to replace multiple linters
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings
    "C4",  # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "RUF", # Ruff-specific rules
    "SIM", # simplify
    "T20", # flake8-print
    "BLE", # blind-except
    "PTH", # use pathlib
    "ERA", # eradicate commented-out code
    "D",   # pydocstyle
]
# Ignore specific rules
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
]
# Allow autofix for all enabled rules
fixable = ["ALL"]
# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
per-file-ignores = { "__init__.py" = ["F401", "F403"] } # Ignore unused imports in __init__.py files

[tool.ruff.lint.isort]
known-first-party = ["stoix"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.10"
namespace_packages = true
incremental = false
cache_dir = ""
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = false
allow_redefinition = true
disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
strict_optional = true
strict_equality = true
explicit_package_bases = true
follow_imports = "skip"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "mpl_toolkits.*",
    "gym.*",
    "pytest_mock.*",
    "numpy.*",
    "dm_env.*",
    "tree.*",
    "pytest.*",
    "IPython.*",
    "optax.*",
    "tqdm.*",
    "rlax.*",
    "neptune.*",
    "tensorboardX.*",
    "scipy.*",
    "hydra.*",
    "omegaconf.*",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ['stoix*']

[tool.setuptools.dynamic]
version = {attr = "stoix.__version__"}
dependencies = {file = ["requirements/requirements.txt"]}
optional-dependencies = {dev = { file = ["requirements/requirements-dev.txt"] }}

[project]
name = "Stoix"
readme = "README.md"
description = "Single-Agent Reinforcement Learning with JAX"
authors = [
    {name = "Edan Toledo"},
  ]
dynamic = ["version", "dependencies", "optional-dependencies"]
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: Apache Software License",
]

[project.urls]
"Homepage" = "https://github.com/EdanToledo/Stoix"
"Bug Tracker" = "https://github.com/EdanToledo/Stoix/issues"
