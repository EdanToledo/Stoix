[tool.black]
line-length = 100

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.10"
namespace_packages = true
incremental = false
cache_dir = ""
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = false
allow_redefinition = true
disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
strict_optional = true
strict_equality = true
explicit_package_bases = true
follow_imports = "skip"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "mpl_toolkits.*",
    "gym.*",
    "pytest_mock.*",
    "numpy.*",
    "dm_env.*",
    "tree.*",
    "pytest.*",
    "IPython.*",
    "optax.*",
    "tqdm.*",
    "rlax.*",
    "neptune.*",
    "tensorboardX.*",
    "scipy.*",
    "hydra.*",
    "omegaconf.*",
]

[tool.flake8]
select = ["A","B","C","D","E","F","G","I","N","T","W"]  # Specify list of error codes to report.
exclude = [
    ".tox",
    ".git",
    "__pycache__",
    "build",
    "dist",
    "proto/*",
    "*.pyc",
    "*.egg-info",
    ".cache",
    ".eggs",
]
max-line-length=105
max-cognitive-complexity=18
import-order-style = "google"
application-import-names = "stoix"
doctests = true
docstring-convention = "google"
per-file-ignores = "__init__.py:F401"

ignore = [
    "A002",  # Argument shadowing a Python builtin.
    "A003",  # Class attribute shadowing a Python builtin.
    "D107",  # Do not require docstrings for __init__.
    "E266",  # Do not require block comments to only have a single leading #.
    "E731",  # Do not assign a lambda expression, use a def.
    "W503",  # Line break before binary operator (not compatible with black).
    "B017",  # assertRaises(Exception): or pytest.raises(Exception) should be considered evil.
    "E203",  # black and flake8 disagree on whitespace before ':'.
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ['stoix*']

[tool.setuptools.dynamic]
version = {attr = "stoix.__version__"}
dependencies = {file = ["requirements/requirements.txt"]}
optional-dependencies = {dev = { file = ["requirements/requirements-dev.txt"] }}

[project]
name = "Stoix"
readme = "README.md"
description = "Single-Agent Reinforcement Learning with JAX"
authors = [
    {name = "Edan Toledo"},
  ]
dynamic = ["version", "dependencies", "optional-dependencies"]
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: Apache Software License",
]

[project.urls]
"Homepage" = "https://github.com/EdanToledo/Stoix"
"Bug Tracker" = "https://github.com/EdanToledo/Stoix/issues"
